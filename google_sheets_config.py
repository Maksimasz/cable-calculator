# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Google Sheets
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import streamlit as st

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets
SCOPE = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/drive"
]

# ID –≤–∞—à–µ–π Google Sheets —Ç–∞–±–ª–∏—Ü—ã (–∏–∑–≤–ª–µ–∫–∏—Ç–µ –∏–∑ URL)
SPREADSHEET_ID = "10SrcUM8AAehI0rIV_c0szFW-9TWhbvb5iO0GecaahmY"  # –í–∞—à ID
WORKSHEET_NAME = "–ö–∞—Ç–∞–ª–æ–≥"  # –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞

def get_google_sheets_client():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ Google Sheets"""
    try:
        # –°–æ–∑–¥–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON —Ñ–∞–π–ª–∞
        creds = ServiceAccountCredentials.from_json_keyfile_name(
            "credentials.json", SCOPE
        )
        client = gspread.authorize(creds)
        return client
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {e}")
        return None

def get_public_sheets_client():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü"""
    try:
        # –î–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü –Ω–µ –Ω—É–∂–Ω—ã —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        client = gspread.Client()
        return client
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø—É–±–ª–∏—á–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ: {e}")
        return None

def load_catalog_from_sheets():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–∑ Google Sheets"""
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    client = get_google_sheets_client()
    if not client:
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø
        client = get_public_sheets_client()
        if not client:
            return {}
    
    try:
        spreadsheet = client.open_by_key(SPREADSHEET_ID)
        worksheet = spreadsheet.worksheet(WORKSHEET_NAME)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        records = worksheet.get_all_records()
        
        catalog = {}
        for record in records:
            if '–í–∏–¥ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞' in record and '–†–∞–∑–º–µ—Ä (–º–º)' in record:
                name = record['–í–∏–¥ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞']
                size = record['–†–∞–∑–º–µ—Ä (–º–º)']
                if name and size:
                    try:
                        catalog[name] = float(size)
                    except ValueError:
                        continue
        return catalog
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        st.write(f"üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {type(e).__name__}")
        return {}

def save_catalog_to_sheets(catalog):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ Google Sheets"""
    client = get_google_sheets_client()
    if not client:
        return False
    
    try:
        spreadsheet = client.open_by_key(SPREADSHEET_ID)
        worksheet = spreadsheet.worksheet(WORKSHEET_NAME)
        
        # –û—á–∏—â–∞–µ–º –ª–∏—Å—Ç
        worksheet.clear()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        worksheet.append_row(['–í–∏–¥ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞', '–†–∞–∑–º–µ—Ä (–º–º)'])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        for name, size in catalog.items():
            worksheet.append_row([name, size])
        
        return True
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

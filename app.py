import streamlit as st
import csv
import os

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets
try:
    from google_sheets_config import load_catalog_from_sheets, save_catalog_to_sheets
    USE_GOOGLE_SHEETS = True
except ImportError:
    USE_GOOGLE_SHEETS = False

CSV_FILE = "connectors.csv"

# ---------- –†–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ ----------
def load_catalog():
    if USE_GOOGLE_SHEETS:
        catalog = load_catalog_from_sheets()
        if catalog:
            return catalog
    
    # Fallback –∫ CSV —Ñ–∞–π–ª—É
    catalog = {}
    if os.path.exists(CSV_FILE):
        with open(CSV_FILE, newline="", encoding="utf-8") as f:
            reader = csv.reader(f)
            for row in reader:
                if len(row) == 2:
                    name, size = row
                    try:
                        catalog[name] = float(size)
                    except ValueError:
                        continue
    else:
        catalog = {
            "SF9351-60004": 3.0,
            "16_MCX-50-2-104": 5.0,
            "16_SMA-50-2-103/111_NE": 3.0,
        }
    return catalog

# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞ - –¥–∞–Ω–Ω—ã–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ Google Sheets

# ---------- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å ----------
if "catalog" not in st.session_state:
    st.session_state.catalog = load_catalog()

# –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
if USE_GOOGLE_SHEETS:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    try:
        test_catalog = load_catalog_from_sheets()
        if test_catalog:
            st.title("‚úÖ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª–∏–Ω—ã –∫–∞–±–µ–ª—è")
            st.caption(f"üìä –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {len(test_catalog)} –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–æ–≤")
        else:
            st.title("‚ùå –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª–∏–Ω—ã –∫–∞–±–µ–ª—è")
            st.caption("üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    except:
        st.title("‚ùå –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª–∏–Ω—ã –∫–∞–±–µ–ª—è")
        st.caption("üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
else:
    st.title("‚ùå –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª–∏–Ω—ã –∫–∞–±–µ–ª—è")
    st.caption(f"üìä –í –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ: {len(st.session_state.catalog)} –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–æ–≤")

st.divider()

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
conn1 = st.selectbox("1 –ö–æ–Ω–Ω–µ–∫—Ç–æ—Ä", list(st.session_state.catalog.keys()), key="conn1")
conn2 = st.selectbox("2 –ö–æ–Ω–Ω–µ–∫—Ç–æ—Ä", list(st.session_state.catalog.keys()), key="conn2")
cable_len = st.number_input("–î–ª–∏–Ω–∞ –∫–∞–±–µ–ª—è (–º–º)", min_value=0.0, step=1.0)
tol = st.number_input("–¢–æ–ª–µ—Ä–∞–Ω—Ü (–º–º)", value=0.0, step=1.0)

size1 = st.session_state.catalog[conn1]
size2 = st.session_state.catalog[conn2]
final_len = cable_len - (size1 + size2) + tol

st.write("–†–∞–∑–º–µ—Ä –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞ 1:", size1, "–º–º")
st.write("–†–∞–∑–º–µ—Ä –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞ 2:", size2, "–º–º")
st.subheader(f"–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∫–∞–±–µ–ª—è: {final_len:.2f} –º–º")
